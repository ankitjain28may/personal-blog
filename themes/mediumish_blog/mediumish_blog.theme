<?php

use Drupal\taxonomy\Entity\Term;

/**
 * @file
 * Functions to support theming in the mediumish_blog theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function mediumish_blog_preprocess_html(array &$variables) {
  /* Add class to html tag */
  //$variables['html_attributes']->addClass('no-js');

  // Don't display the site name twice on the front page (and potentially others)
  /*if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
    $variables['head_title'] = $variables['head_title_array']['name'];
  }*/
}

/**
 * Implements hook_page_attachments_alter().
 */
function mediumish_blog_page_attachments_alter(array &$page) {
  // Tell IE to use latest rendering engine (not to use compatibility mode).
  /*$ie_edge = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
    'http-equiv' => 'X-UA-Compatible',
    'content' => 'IE=edge',
    ],
  ];
  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function mediumish_blog_preprocess_page(array &$variables) {
}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function mediumish_blog_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical') {
    $suggestions[] = 'page__taxonomy__';
  }
}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function mediumish_blog_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  /*$node = $variables['elements']['#node'];

  if ($variables['elements']['#view_mode'] == "full") {

  }*/

  $route_name = \Drupal::routeMatch()->getRouteName();
  if ($route_name == "entity.taxonomy_term.canonical") {
    $suggestions[] = 'node__view__taxonomy_term';
  } elseif (preg_match("/^view.archive.*$/", $route_name)) {
    $parameter = \Drupal::routeMatch()->getRawParameter('arg_0');
    if ($parameter != null) {
      $suggestions[] = 'node__view__archive_month';
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function mediumish_blog_preprocess_block(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function mediumish_blog_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  $suggestions[] = 'field__' . $element['#view_mode'];
  $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function mediumish_blog_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
    $suggestions[] = 'fieldset__form_composite';
  }*/
}

/**
 * Implements hook_preprocess_node().
 */
function mediumish_blog_preprocess_node(array &$variables) {
  // Default to turning off byline/submitted.
  $node = $variables['node'];
  $variables['author_bio'] = $node->getOwner()->field_bio->value;

  global $base_url;
  $theme = \Drupal::theme()->getActiveTheme();
  $variables['author_default_image'] = $base_url.'/'. $theme->getPath() .'/img/anonymous.png';

  // var_dump($variables['author_picture']['#user']);
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function mediumish_blog_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  if ($route_name == "entity.taxonomy_term.canonical") {
    $suggestions[] = sprintf('views_view__%s', $variables['view']->id());
  } elseif (preg_match("/^view.archive.*$/", $route_name)) {
    $parameter = \Drupal::routeMatch()->getRawParameter('arg_0');
    if ($parameter != null) {
      $suggestions[] = 'views_view__archive_month';
    } else {
      $suggestions[] = sprintf('views_view__%s', $variables['view']->id());
    }
  }
}

/**
 * Implements hook_preprocess_form().
 */
function mediumish_blog_preprocess_form(array &$variables) {
  //$variables['attributes']['novalidate'] = 'novalidate';
}

/**
 * Implements hook_preprocess_select().
 */
function mediumish_blog_preprocess_select(array &$variables) {
  //$variables['attributes']['class'][] = 'select-chosen';
}

/**
 * Implements hook_preprocess_field().
 */
function mediumish_blog_preprocess_field(array &$variables, $hook) {
  /*switch ($variables['element']['#field_name']) {
  }*/
}

/**
 * Implements hook_preprocess_details().
 */
function mediumish_blog_preprocess_details(array &$variables) {
  /*$variables['attributes']['class'][] = 'details';
  $variables['summary_attributes']['class'] = 'summary';*/
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function mediumish_blog_theme_suggestions_details_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function mediumish_blog_preprocess_menu_local_task(array &$variables) {
  //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 * @param array $suggestions
 * @param array $variables
 */
function mediumish_blog_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}



